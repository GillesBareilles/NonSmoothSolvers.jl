using NonSmoothProblems
using NonSmoothSolvers
using LinearAlgebra

const NSP = NonSmoothProblems
const NSS = NonSmoothSolvers

function main()
    n = 50
    m = 25
    pb = get_eigmaxlinear_pb(m=m, n=n)
    x = zeros(n)

    # @show F(pb, x .+ rand(n))
    # @show ∂F_elt(pb, x .+ rand(n))

    @time F(pb, x .+ rand(n))
    @time ∂F_elt(pb, x .+ rand(n))
    @show is_differentiable(pb, x)

    # o = Subgradient()
    # xfinal, tr = optimize!(pb, o, x, optparams=OptimizerParams(iterations_limit=10))
    # @show xfinal

    println()
    println()

    it = 200
    tracelength = 20

    # o = NSBFGS()
    # xfinal_bfgs, tr = optimize!(pb, o, x, optparams=OptimizerParams(iterations_limit=it, trace_length=tracelength))

    # o = GradientSampling(x)
    # xfinal_gs, tr = optimize!(pb, o, x, optparams=OptimizerParams(iterations_limit=10, trace_length=10))

    o = NSBFGS()
    xfinal, tr = optimize!(pb, o, x, optparams=OptimizerParams(iterations_limit=1400, trace_length=tracelength))

    # @show xfinal_bfgs
    # @show xfinal_gs
    @show xfinal

    # xfinal_bfgs = [0.1623359585237298, 0.14650184766509283, 0.48300676752086363, -0.00670815434781952, -0.18255574462997431, 0.09914503846301216, -0.05314355688757383, -0.7135978425937763, 0.45324081402528293, -0.4714462176873512, 0.2615825379494254, 0.8209889802556685, 0.03982794255240723, -0.4067530069681492, 0.6404584324808065, -0.1391318283615409, 0.3697036029403953, -0.44895479379517383, -0.5588946005642443, -0.020782662893620032, 0.3037909384194016, 0.04741880049175656, 0.13146662860148958, -0.43323995934689097, -0.1360060342584284, 0.14392389085580493, -0.4550830394600083, 0.22894988085296192, -0.08393701434137328, -0.007361587676646294, -0.6383421434316542, -0.37939257831353096, -0.7714847132140811, -0.9412809038973029, -0.07390779522777798, 0.46810572489091395, -0.21282056000841357, -0.5181914856746916, 0.32526613248812875, -0.5888947169836996, -0.7369634135327118, -0.45392244023228184, -0.23274038217207293, -0.43266282859103444, -0.055333412398139666, 0.15952979442129125, 0.043161159069233665, 0.26824668078528957, 0.1442569130961973, -0.09981611540858172]
    # xfinal_gs = [0.17270306208456576, 0.1444113691404214, 0.4803528789120205, -0.0018216330480881017, -0.17999622910339208, 0.10437892351797359, -0.0451402981850493, -0.7251687245640766, 0.4424694534656526, -0.4636327558282331, 0.2593860439285573, 0.8090110268507011, 0.04139559372051062, -0.41025349668553907, 0.6349780401403139, -0.13774394094250383, 0.36464191692950154, -0.44352973364189696, -0.5494237611688693, -0.021858930070157385, 0.3088478750302562, 0.05541541960773631, 0.11756169555727361, -0.42864478503716336, -0.13214208439284314, 0.13718115345142926, -0.4594328411724015, 0.2318747350864081, -0.08366775410447404, -0.005329742779928076, -0.6336422429377264, -0.38776903725659256, -0.7789548480118285, -0.9394824437016526, -0.06871457670959269, 0.4745624781758041, -0.21622205260139363, -0.5283203611408388, 0.33296618619999946, -0.5904524116111426, -0.7386581995749144, -0.4536041216163569, -0.23237947317198088, -0.43458091350938594, -0.0669056311481956, 0.1575492725981966, 0.04818392246597729, 0.2713886656855366, 0.1540104912819097, -0.10414280492400724]
    # xfinal = [0.1727508879661212, 0.14427406629905412, 0.4804972103061302, -0.0017620535516393615, -0.18002651383772347, 0.10428460347132448, -0.045063268359047885, -0.7252123575907988, 0.44240309909775, -0.46356409076899624, 0.2593867690625561, 0.80899957770808, 0.041225072834493004, -0.41032265346249275, 0.6349357758961202, -0.13762202500460347, 0.3645405375966907, -0.44339866948252776, -0.5494462582449624, -0.02191557752589415, 0.30895202040563985, 0.05546265135785551, 0.11755211324290663, -0.4286313362337124, -0.13207097878262436, 0.13711525957226717, -0.4595618364258303, 0.2319054551895379, -0.0837268063148705, -0.005320801359365086, -0.6336428111728033, -0.38788346485226743, -0.7791171347363044, -0.9394872052094738, -0.0686980501432224, 0.4746112627115909, -0.21624278368912606, -0.5284977157582383, 0.3331214367943889, -0.5904637505226982, -0.7386750430407496, -0.45356334376036017, -0.23245211625938994, -0.43450612729771615, -0.06710890450824919, 0.15756633480718324, 0.04822123622323272, 0.27125987046203226, 0.15411714925026676, -0.10422806044730497]

    decomp = eigen(NSP.g(pb, xfinal))

    @show decomp.values[end-6 : end]
    return
end

res = main()